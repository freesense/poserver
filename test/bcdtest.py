#!/usr/bin/env python
#coding: utf-8

import sys
sys.path.append("..")

from GY8583 import GY8583
from GY8583Errors import *
from ctypes import *
from gyconfig import *
import memcache

def hexdump(data, text ='Hexdump'):
	'''
	16进制输出，向logging模块输出
	data - 要输出的数据
	text - 输出标题
	lv - 输出级别
	'''
	if data is None:
		print '%s, None'% text
		return

	outs =[]
	outs.append('%s, length =%d'%(text, len(data)))
	l, r, x =[],[], 0
	for c in data:
		l.append('%02x '% ord(c))
		if ord(c)>= 32 and ord(c)<= 126:
			r.append(c)
		else:
			r.append('.')
		x += 1
		if x == 16:
			outs.append('%-48s%-16s'%(''.join(l),''.join(r)))
			l, r, x =[],[], 0
	if len(r)> 0:
		outs.append('%-48s%-16s'%(''.join(l),''.join(r)))
	outs ='\n'.join(outs)
	print outs

s1 = '\x08\x00\x00\x20\x00\x00\x00\xC0\x00\x16\x00\x00\x10\x31\x32\x33\x34\x35\x36\x37\x38\x31\x32\x35\x35\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x00\x11\x00\x00\x00\x01\x00\x10\x00\x17\x53\x65\x71\x75\x65\x6E\x63\x65\x20\x4E\x6F\x30\x34\x33\x30\x36\x31\x00\x03\x30\x31\x20'
s2 = '\x08\x10\x00\x38\x00\x01\x0A\xC0\x00\x14\x00\x00\x10\x15\x11\x40\x05\x02\x08\x00\x01\x00\x00\x31\x36\x32\x31\x34\x36\x30\x30\x30\x31\x30\x33\x30\x30\x31\x32\x33\x34\x35\x36\x37\x38\x31\x32\x35\x35\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x00\x11\x00\x00\x00\x01\x00\x10\x00\x24\xF9\x27\x14\xE8\x0E\x83\x2E\xDC\xAD\xC6\x7D\x84\x4B\xF6\xE9\x1B\x1E\x3A\x9D\x81\xAD\xC6\x7D\x84'
s3 = '\x02\x00\x30\x20\x04\xC0\x20\xC0\x98\x11\x00\x00\x00\x00\x00\x00\x00\x01\x23\x00\x00\x11\x02\x10\x00\x06\x34\x23\x26\x99\x06\x60\x11\x19\x67\x38\x6D\x99\x12\x20\x19\x04\x00\x00\x31\x32\x33\x34\x35\x36\x37\x38\x31\x32\x35\x35\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x31\x35\x36\x7A\x52\x04\xCC\xD8\x1D\x3E\x67\x20\x00\x00\x00\x00\x00\x00\x00\x00\x14\x22\x00\x00\x01\x00\x05\x21\x32\x42\x31\x30\x44\x32\x37\x35'
s4 ='\x02\x10\x70\x3E\x00\x81\x0E\xD0\x88\x13\x19\x23\x26\x99\x06\x60\x11\x19\x67\x38\x60\x00\x00\x00\x00\x00\x00\x00\x01\x23\x00\x00\x11\x15\x12\x40\x05\x02\x14\x05\x00\x00\x00\x08\x01\x00\x00\x00\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x31\x32\x33\x34\x35\x36\x30\x30\x31\x32\x33\x34\x35\x36\x37\x38\x31\x32\x35\x35\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x22\x30\x31\x30\x32\x30\x30\x30\x30\x20\x20\x20\x30\x31\x30\x33\x30\x30\x30\x30\x20\x20\x20\x31\x35\x36\x20\x00\x00\x00\x00\x00\x00\x00\x00\x14\x22\x00\x00\x01\x00\x05\x21\x00\x03\x43\x55\x50\x46\x31\x41\x33\x44\x41\x42\x39'
s5 = '\x02\x00\x70\x24\x04\x80\x0C\xC0\x80\x19\x19\x23\x26\x99\x06\x60\x11\x19\x67\x38\x60\x20\x00\x00\x00\x00\x00\x00\x01\x23\x00\x00\x12\x14\x05\x01\x20\x00\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x31\x32\x33\x34\x35\x36\x31\x32\x33\x34\x35\x36\x37\x38\x31\x32\x35\x35\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x31\x35\x36\x00\x14\x23\x00\x00\x01\x00\x05\x01\x00\x12\x00\x00\x01\x00\x00\x11\x31\x32\x33\x36\x46\x30\x35\x38'
s6 = '\x02\x10\x70\x3E\x00\x81\x0E\xD0\x88\x13\x19\x23\x26\x99\x06\x60\x11\x19\x67\x38\x60\x20\x00\x00\x00\x00\x00\x00\x01\x23\x00\x00\x12\x15\x13\x26\x05\x02\x14\x05\x00\x00\x00\x08\x01\x00\x00\x00\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x31\x32\x33\x34\x35\x36\x30\x30\x31\x32\x33\x34\x35\x36\x37\x38\x31\x32\x35\x35\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x22\x30\x31\x30\x33\x30\x30\x30\x30\x20\x20\x20\x30\x31\x30\x30\x30\x30\x30\x30\x20\x20\x20\x31\x35\x36\x00\x00\x00\x00\x00\x00\x00\x00\x00\x14\x23\x00\x00\x01\x00\x05\x01\x00\x63\x43\x55\x50\x69\x73\x73\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x63\x75\x70\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x61\x71\x75\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x38\x34\x45\x42\x41\x32\x33\x30'
s7 = '\x01\x00\x30\x20\x04\xC0\x20\xC0\x98\x11\x03\x00\x00\x00\x00\x00\x00\x04\x56\x00\x00\x13\x02\x10\x06\x06\x34\x23\x26\x99\x06\x60\x11\x19\x67\x38\x6D\x99\x12\x20\x19\x04\x00\x00\x31\x32\x33\x34\x35\x36\x37\x38\x31\x32\x35\x35\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x31\x35\x36\x7A\x52\x04\xCC\xD8\x1D\x3E\x67\x20\x00\x00\x00\x00\x00\x00\x00\x00\x13\x10\x00\x00\x01\x00\x05\x20\x33\x30\x39\x33\x31\x38\x42\x42'
s8 = '\x01\x10\x70\x3E\x00\x81\x0E\xD0\x88\x13\x19\x23\x26\x99\x06\x60\x11\x19\x67\x38\x60\x03\x00\x00\x00\x00\x00\x00\x04\x56\x00\x00\x13\x15\x14\x28\x05\x02\x14\x05\x00\x00\x06\x08\x00\x01\x00\x00\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x31\x32\x33\x34\x35\x36\x30\x30\x31\x32\x33\x34\x35\x36\x37\x38\x31\x32\x35\x35\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x22\x30\x31\x30\x34\x30\x30\x30\x30\x20\x20\x20\x30\x31\x30\x33\x30\x30\x30\x30\x20\x20\x20\x31\x35\x36\x20\x00\x00\x00\x00\x00\x00\x00\x00\x13\x10\x00\x00\x01\x00\x05\x20\x00\x63\x43\x55\x50\x69\x73\x73\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x63\x75\x70\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x61\x71\x75\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x37\x44\x35\x35\x45\x34\x36\x43'
s9 = '\x02\x00\x30\x20\x04\x80\x24\xC0\x88\x19\x00\x00\x00\x00\x00\x00\x00\x04\x56\x00\x00\x14\x02\x20\x06\x34\x23\x26\x99\x06\x60\x11\x19\x67\x38\x6D\x99\x12\x20\x19\x04\x00\x00\x31\x32\x33\x34\x35\x36\x31\x32\x33\x34\x35\x36\x37\x38\x31\x32\x35\x35\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x31\x35\x36\x00\x00\x00\x00\x00\x00\x00\x00\x00\x13\x20\x00\x00\x01\x00\x05\x20\x00\x16\x00\x00\x00\x00\x00\x00\x05\x02\x35\x43\x39\x41\x43\x35\x37\x39'
s10 = '\x02\x10\x70\x3E\x00\x81\x0A\xD0\x88\x13\x19\x23\x26\x99\x06\x60\x11\x19\x67\x38\x60\x00\x00\x00\x00\x00\x00\x00\x04\x56\x00\x00\x14\x15\x15\x34\x05\x02\x14\x05\x00\x00\x06\x08\x01\x00\x00\x00\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x30\x30\x31\x32\x33\x34\x35\x36\x37\x38\x31\x32\x35\x35\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x22\x30\x31\x30\x32\x30\x30\x30\x30\x20\x20\x20\x30\x31\x30\x33\x30\x30\x30\x30\x20\x20\x20\x31\x35\x36\x00\x00\x00\x00\x00\x00\x00\x00\x00\x13\x20\x00\x00\x01\x00\x05\x20\x00\x63\x43\x55\x50\x69\x73\x73\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x63\x75\x70\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x61\x71\x75\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x32\x31\x42\x32\x44\x43\x41\x34'
s11 = '\x01\x00\x30\x20\x04\x80\x24\xC0\x88\x19\x20\x00\x00\x00\x00\x00\x00\x04\x56\x00\x00\x15\x02\x20\x06\x34\x23\x26\x99\x06\x60\x11\x19\x67\x38\x6D\x99\x12\x20\x19\x04\x00\x00\x31\x32\x33\x34\x35\x36\x31\x32\x33\x34\x35\x36\x37\x38\x31\x32\x35\x35\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x31\x35\x36\x00\x00\x00\x00\x00\x00\x00\x00\x00\x13\x11\x00\x00\x01\x00\x05\x20\x00\x16\x00\x00\x00\x00\x00\x00\x05\x02\x30\x34\x32\x38\x44\x45\x33\x34'
s12 = '\x01\x10\x70\x3E\x00\x81\x0E\xD0\x88\x13\x19\x23\x26\x99\x06\x60\x11\x19\x67\x38\x60\x20\x00\x00\x00\x00\x00\x00\x04\x56\x00\x00\x15\x15\x16\x24\x05\x02\x14\x05\x00\x00\x06\x08\x00\x01\x00\x00\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x31\x32\x33\x34\x35\x36\x30\x30\x31\x32\x33\x34\x35\x36\x37\x38\x31\x32\x35\x35\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x36\x22\x30\x31\x30\x32\x30\x30\x30\x30\x20\x20\x20\x30\x31\x30\x33\x30\x30\x30\x30\x20\x20\x20\x31\x35\x36\x00\x00\x00\x00\x00\x00\x00\x00\x00\x13\x11\x00\x00\x01\x00\x05\x20\x00\x63\x43\x55\x50\x69\x73\x73\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x63\x75\x70\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x61\x71\x75\x31\x32\x33\x34\x35\x36\x37\x38\x39\x30\x31\x32\x33\x34\x35\x36\x37\x42\x33\x30\x36\x33\x44\x36\x39'
s14 = '\x04\x00\x70\x20\x00\x80\x02\xc0\x00\x13\x11\x05\x00\x10\x10\x19\x90\x21\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x08\x00\x39\x38\x30\x30\x30\x30\x30\x30\x30\x31\x30\x30\x30\x30\x30\x31\x30\x30\x31\x32\x32\x30\x30\x30\x30\x00\x14\x61\x00\x00\x01\x00\x00\x01\x00\x03\x30\x30\x31\x39\x37\x33\x46\x41\x44\x35\x41'
s15 = '\x09\x10\x70\x38\x00\x81\x0a\xc0\x80\x13\x11\x01\x00\x10\x10\x00\x10\x21\x00\x01\x00\x00\x00\x00\x50\x00\x00\x19\x08\x16\x34\x57\x07\x25\x00\x08\x01\x00\x00\x00\x30\x31\x31\x33\x37\x34\x37\x34\x31\x32\x39\x37\x30\x30\x30\x30\x30\x30\x30\x30\x30\x31\x30\x30\x30\x30\x30\x31\x34\x30\x31\x30\x32\x30\x30\x30\x30\x31\x35\x36\x00\x08\x61\x00\x00\x01\x00\x07\x47\x59\x54\x03\x32\x35\x30\x46\x46\x31\x46\x32\x36\x33\x41'

def d11():
	iso = GY8583()
	iso.setMTI('0800')
	iso.setBit(11, '003826')
	iso.setBit(41, '00000003')
	iso.setBit(42, '01001820000')
	iso.setBit(62, '\x00\x01\x02\x03\x04\x05\x06\x07')
	iso.setBit(63, '38')
	iso.addBit(60, (('N', 2, '0'), ('N', 6, '139'), ('N', 3, '1')))
	iso.endBit(60)

	s = iso.getRawIso()
	hexdump(s, 'GY8583')
	s = GY8583(s)
	s.showIsoBits()

	hexdump(s.getBit(62), '62')
	hexdump(s.getBit(60), '60')
	offset, d = s.getBitNext(60, 0, (('N', 2), ('N', 6), ('N', 3)))
	print 'offset =', offset, 'data is:'
	print d

def d31():
	iso = GY8583()
	iso.setMTI('0920')
	iso.setBit(3, '700000')
	iso.setBit(11, '5566')
	iso.setBit(22, '022')
	iso.setBit(25, '00')
	iso.setBit(35, '0100101000111560001')
	iso.setBit(41, '03')
	iso.setBit(42, '32018004557')
	iso.setBit(53, '0600000000000000')
	iso.addBit(60, (('N', 2, '01'), ('N', 6, '000300')))
	iso.endBit(60)
	iso.setBit(64, '98AC53DF')

	s = iso.getRawIso()
	hexdump(s, 'GY8583')
	s = GY8583(s)
	s.showIsoBits()

	hexdump(s.getBit(60))
	offset, d = s.getBitNext(60, 0, (('N', 2), ('N', 6)))
	print 'offset =', offset, 'data is:'
	print d

def d32():
	iso = GY8583()
	iso.setMTI('0930')
	iso.setBit(2, '01001010001')
	iso.setBit(3, '700000')
	iso.setBit(11, '5566')
	iso.setBit(12, '063221')
	iso.setBit(13, '0504')
	iso.setBit(25, '00')
	iso.setBit(32, '32')
	iso.setBit(37, '131112051252')
	iso.setBit(39, '00')
	iso.setBit(41, '03')
	iso.setBit(42, '32018004557')
	iso.setBit(44, '223200000000032000000000')
	iso.addBit(48, (('N', 11, '01001010001'), ('N', 2, '0')))
#	iso.addBit(48, (('N', 4, '0800'), ('N', 6, '200000'), ('N', 6, '100000'), ('N', 6, '101010'), ('ANS', 12, '131212101010'), ('N', 2, '00'), ('N', 8, '03'), ('N', 4, '1500'), ('N', 12, '10000'), ('N', 16, '88'), ('N', 12, '123'), ('N', 6, '12')))
#	iso.addBit(48, (('N', 4, '0800'), ('N', 6, '200000'), ('N', 6, '100001'), ('N', 6, '101110'), ('ANS', 12, '131212101010'), ('N', 2, '00'), ('N', 8, '13'), ('N', 4, '1080'), ('N', 12, '20000'), ('N', 16, '89'), ('N', 12, '223'), ('N', 6, '14')))
#	iso.addBit(48, (('N', 4, '0800'), ('N', 6, '200000'), ('N', 6, '100002'), ('N', 6, '101210'), ('ANS', 12, '131212101010'), ('N', 2, '00'), ('N', 8, '03'), ('N', 4, '1500'), ('N', 12, '30000'), ('N', 16, '91'), ('N', 12, '1820'), ('N', 6, '19')))
	iso.addBit(60, (('N', 2, '1'), ('N', 6, '253')))
	iso.endBit(60)
	iso.endBit(48)
	iso.setBit(64, '12345678')

	s = iso.getRawIso()
	hexdump(s, 'GY8583')
	s = GY8583(s)
	s.showIsoBits()

	hexdump(s.getBit(48), '48')
	hexdump(s.getBit(60), '60')
	offset, d = s.getBitNext(60, 0, (('N', 2), ('N', 6)))
	print '1.offset =', offset, 'data is:'
	print d
	offset = 0
	offset, d = s.getBitNext(48, offset, (('N', 11), ('N', 2)))
	print '2.offset =', offset, 'data is:'
	print d
	for x in xrange(int(d[1])):
		offset, d = s.getBitNext(48, offset, (('N', 4), ('N', 6), ('N', 6), ('N', 6), ('ANS', 12), ('N', 2), ('N', 8), ('N', 4), ('N', 12), ('N', 16), ('N', 12), ('N', 6)))
		print 'offset =', offset, 'data is:'
		print d

def verify(s):
	hexdump(s)
	obj = GY8583(s)
	obj.showIsoBits()
	errorinfo = None
	try:
		errorinfo = obj.getBit(62)
	except:
		pass
	else:
		print 'Bit[62]:', errorinfo.decode('gbk').encode('utf8')

def mac(s, mak):
	modCrypt = CDLL('../gydes.so')
	mac = create_string_buffer(16)
	modCrypt.DES3_Mac(c_char_p(mak), c_char_p(s[0:-8]), c_int(len(s)-8), mac)
	print mac.raw[0:8]

def getKey(entno, posno):
	mc = memcache.Client(cache_addr)
	k = 'pos.security.%s.%s' % (entno, posno)
	keys = mc.get(k)
	hexdump(keys[0:16], 'PIK')
	hexdump(keys[20:28], 'MAK')

if __name__ == '__main__':
#	d32()
	verify(s14)
#	verify(s15)
#	mac(s14, '\x54\xCD\xED\x51\x2F\x6A\x59\x77')
#	getKey('01006000610', '01')
